Assignment No. 6



dac@dac-Veriton-M200-H310:~$ sudo mysql -u root
[sudo] password for dac: 
mysql: [ERROR] Found option without preceding group in config file /etc/mysql/mysql.conf.d/mysqld.cnf at line 13.
mysql: [ERROR] Stopped processing the 'includedir' directive in file /etc/mysql/my.cnf at line 21.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.34-0ubuntu0.22.04.1 (Ubuntu)

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| Practice           |
| b1db               |
| batch2college      |
| cdacdac            |
| cdacdb             |
| college            |
| employee           |
| information_schema |
| mysql              |
| performance_schema |
| pgdac              |
| pgdacbatch1        |
| sys                |
+--------------------+
13 rows in set (0.00 sec)

mysql> use pgdacbatch1;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> show tables;
+-----------------------+
| Tables_in_pgdacbatch1 |
+-----------------------+
| customer              |
| student               |
| teacher               |
+-----------------------+
3 rows in set (0.00 sec)

mysql> create table worker(worker_id int,first_name varchar(15),last_name varchar(15),salary bigint, joining_date timestamp, department varchar(10));
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO Worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT)
    -> VALUES ('001', 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR');
ERROR 1146 (42S02): Table 'pgdacbatch1.Worker' doesn't exist
mysql> INSERT INTO worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES ('001', 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR');
Query OK, 1 row affected (0.00 sec)

mysql> select * from worker;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)

mysql> INSERT INTO Worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES ('002', 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin');
Query OK, 1 row affected (0.01 sec)Verma', 80000, '2014-06-11 09:00:00', 'Admin');

mysql> INSERT INTO worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT)
    -> VALUES ('003', 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR');
Query OK, 1 row affected (0.01 sec)

mysql> 	NSERT INTO worker VALUES ('004', 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin');
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NSERT INTO worker VALUES ('004', 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:0' at line 1
mysql> INSERT INTO worker VALUES ('004', 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO worker VALUES ('005', 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO worker VALUES ('006', 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO worker VALUES ('007', 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO worker VALUES ('008', 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 'Admin');
Query OK, 1 row affected (0.00 sec)

mysql> select * from worker;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> create table bonus (woker_ref_id int, bonus_date timestamp, bonus_amount bigint);
Query OK, 0 rows affected (0.02 sec)

mysql> insert into bonus values(1,"2016-02-20 00:00:00", 5000);
Query OK, 1 row affected (0.00 sec)

mysql> insert into bonus values(2,"2016-06-11 00:00:00", 3000);
Query OK, 1 row affected (0.01 sec)

mysql> insert into bonus values(3,"2016-02-20 00:00:00", 4000);
Query OK, 1 row affected (0.00 sec)

mysql> insert into bonus values(1,"2016-02-20 00:00:00", 4500);
Query OK, 1 row affected (0.01 sec)

mysql> insert into bonus values(2,"2016-06-11 00:00:00", 3500);
Query OK, 1 row affected (0.01 sec)

mysql> select * from bonus;
+--------------+---------------------+--------------+
| woker_ref_id | bonus_date          | bonus_amount |
+--------------+---------------------+--------------+
|            1 | 2016-02-20 00:00:00 |         5000 |
|            2 | 2016-06-11 00:00:00 |         3000 |
|            3 | 2016-02-20 00:00:00 |         4000 |
|            1 | 2016-02-20 00:00:00 |         4500 |
|            2 | 2016-06-11 00:00:00 |         3500 |
+--------------+---------------------+--------------+
5 rows in set (0.00 sec)

mysql> alter table bonus rename column woker_ref_id to worker_ref_id;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select * from bonus;
+---------------+---------------------+--------------+
| worker_ref_id | bonus_date          | bonus_amount |
+---------------+---------------------+--------------+
|             1 | 2016-02-20 00:00:00 |         5000 |
|             2 | 2016-06-11 00:00:00 |         3000 |
|             3 | 2016-02-20 00:00:00 |         4000 |
|             1 | 2016-02-20 00:00:00 |         4500 |
|             2 | 2016-06-11 00:00:00 |         3500 |
+---------------+---------------------+--------------+
5 rows in set (0.00 sec)

mysql> create table title (worker_ref_id int, worker_title varchar(15), affected_from timestamp);
Query OK, 0 rows affected (0.02 sec)

mysql> select * from title;
Empty set (0.00 sec)

mysql> INSERT INTO title VALUES (1, 'Manager', '2016-02-20 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> INSERT INTO title VALUES (2, 'Executive', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> INSERT INTO title VALUES (8, 'Executive', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> INSERT INTO title VALUES (5, 'Manager', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> INSERT INTO title VALUES (4, 'Asst. Manager', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.01 sec)

mysql> 
mysql> INSERT INTO title VALUES (7, 'Executive', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> 
mysql> INSERT INTO title VALUES (6, 'Lead', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.01 sec)

mysql> 
mysql> INSERT INTO title VALUES (3, 'Lead', '2016-06-11 00:00:00');
Query OK, 1 row affected (0.00 sec)

mysql> select * from title;
+---------------+---------------+---------------------+
| worker_ref_id | worker_title  | affected_from       |
+---------------+---------------+---------------------+
|             1 | Manager       | 2016-02-20 00:00:00 |
|             2 | Executive     | 2016-06-11 00:00:00 |
|             8 | Executive     | 2016-06-11 00:00:00 |
|             5 | Manager       | 2016-06-11 00:00:00 |
|             4 | Asst. Manager | 2016-06-11 00:00:00 |
|             7 | Executive     | 2016-06-11 00:00:00 |
|             6 | Lead          | 2016-06-11 00:00:00 |
|             3 | Lead          | 2016-06-11 00:00:00 |
+---------------+---------------+---------------------+
8 rows in set (0.00 sec)

mysql> 











1. Write an SQL query to fetch “FIRST_NAME” from the Worker table using the
alias name <WORKER_NAME>.
mysql> select first_name as worker_name from worker;
+-------------+
| worker_name |
+-------------+
| Monika      |
| Niharika    |
| Vishal      |
| Amitabh     |
| Vivek       |
| Vipul       |
| Satish      |
| Geetika     |
+-------------+
8 rows in set (0.00 sec)


2. Write an SQL query to fetch “FIRST_NAME” from the Worker table in upper
case.
mysql> select upper(first_name) as worker_name from worker;
+-------------+
| worker_name |
+-------------+
| MONIKA      |
| NIHARIKA    |
| VISHAL      |
| AMITABH     |
| VIVEK       |
| VIPUL       |
| SATISH      |
| GEETIKA     |
+-------------+
8 rows in set (0.00 sec)



3. Write an SQL query to fetch unique values of DEPARTMENT from the Worker
table.
mysql> select distinct(department) from worker;
+------------+
| department |
+------------+
| HR         |
| Admin      |
| Account    |
+------------+
3 rows in set (0.00 sec)



4. Write an SQL query to print the first three characters of FIRST_NAME from the
Worker table.

mysql> select substring(first_name,1,3) from worker;
+---------------------------+
| substring(first_name,1,3) |
+---------------------------+
| Mon                       |
| Nih                       |
| Vis                       |
| Ami                       |
| Viv                       |
| Vip                       |
| Sat                       |
| Gee                       |
+---------------------------+
8 rows in set (0.00 sec)

mysql> 




5. Write an SQL query to find the position of the alphabet (‘a’) in the first name
column ‘Amitabh’ from the Worker table.

mysql> select position("a" in "Amitabh");
+----------------------------+
| position("a" in "Amitabh") |
+----------------------------+
|                          1 |
+----------------------------+
1 row in set (0.00 sec)




6. Write an SQL query to print all Worker details from the Worker table order by
FIRST_NAME Ascending.
mysql> select * from worker order by first_name asc;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)



7. Write an SQL query to print all Worker details from the Worker table order by
FIRST_NAME Ascending and DEPARTMENT Descending.

mysql> select * from worker order by first_name asc, department desc;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)





8. Write an SQL query to print details for Workers with the first names “Vipul” and
“Satish” from the Worker table.
mysql> select * from worker where first_name in ("Vipul","Satish");
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)



9. Write an SQL query to print details of workers excluding first names, “Vipul” and
“Satish” from the Worker table.
mysql> select * from worker where first_name not in ("Vipul","Satish");
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
6 rows in set (0.00 sec)




10. Write an SQL query to print details of Workers with DEPARTMENT name as
“Admin”.

mysql> select * from worker where department="Admin";
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)



11. Write an SQL query to print details of the Workers whose FIRST_NAME contains
‘a’.
mysql> select  * from worker where first_name like 'a%';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)



12. Write an SQL query to print names of the Workers whose FIRST_NAME ends
with ‘a’.
mysql> select  concat(first_name," ",last_name) as name from worker where first_name like '%a';
+-----------------+
| name            |
+-----------------+
| Monika Arora    |
| Niharika Verma  |
| Geetika Chauhan |
+-----------------+
3 rows in set (0.00 sec)



13. Write an SQL query to print details of the Workers whose FIRST_NAME ends
with ‘h’ and contains six alphabets.
mysql> select  * from worker where first_name like '_____h';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)



14. Write an SQL query to print details of the Workers whose SALARY lies between
100000 and 500000.
mysql> select  * from worker where salary between 100000 and 500000;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)



15. Write an SQL query to print details of the Workers who joined in Feb’2014.
mysql> select  * from worker where date_format(joining_date, '%Y-%m') = '2014-02';
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.00 sec)



16. Write an SQL query to fetch the count of employees working in the department 
‘Admin’.
mysql> select count(*) as Admin_Count from worker where department="Admin";
+-------------+
| Admin_Count |
+-------------+
|           4 |
+-------------+
1 row in set (0.00 sec)



17. Write an SQL query to fetch worker names with salaries >= 50000 and <=
100000.
mysql> select  concat(first_name," ",last_name) as name from worker where salary>=50000 and salary<=100000;
+-----------------+
| name            |
+-----------------+
| Monika Arora    |
| Niharika Verma  |
| Satish Kumar    |
| Geetika Chauhan |
+-----------------+
4 rows in set (0.00 sec)



18. Write an SQL query to fetch the no. of workers for each department in
descending order. 
mysql> select department, count(*) as no_of_emp from worker group by department order by no_of_emp desc;
+------------+-----------+
| department | no_of_emp |
+------------+-----------+
| Admin      |         4 |
| HR         |         2 |
| Account    |         2 |
+------------+-----------+
3 rows in set (0.00 sec)



19. Write an SQL query to print details of the Workers who are also Managers.
mysql> select * from worker join title on worker.worker_id = title.worker_ref_id where worker_title = "Manager";
+-----------+------------+-----------+--------+---------------------+------------+---------------+--------------+---------------------+
| worker_id | first_name | last_name | salary | joining_date        | department | worker_ref_id | worker_title | affected_from       |
+-----------+------------+-----------+--------+---------------------+------------+---------------+--------------+---------------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |             1 | Manager      | 2016-02-20 00:00:00 |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |             5 | Manager      | 2016-06-11 00:00:00 |
+-----------+------------+-----------+--------+---------------------+------------+---------------+--------------+---------------------+
2 rows in set (0.00 sec)



20. Write an SQL query to fetch duplicate records having matching data in some
fields of a table.

mysql> select joining_date,count(joining_date) from worker group by joining_date having count(joining_date)>1;
+---------------------+---------------------+
| joining_date        | count(joining_date) |
+---------------------+---------------------+
| 2014-02-20 09:00:00 |                   3 |
| 2014-06-11 09:00:00 |                   3 |
+---------------------+---------------------+
2 rows in set (0.00 sec)


mysql> select department,count(department) from worker group by department having count(department)>1;
+------------+-------------------+
| department | count(department) |
+------------+-------------------+
| HR         |                 2 |
| Admin      |                 4 |
| Account    |                 2 |
+------------+-------------------+
3 rows in set (0.00 sec)


mysql> select salary,count(salary) from worker group by salary having count(salary)>1;
+--------+---------------+
| salary | count(salary) |
+--------+---------------+
| 500000 |             2 |
+--------+---------------+
1 row in set (0.00 sec)



21. Write an SQL query to show only odd rows from a table.
mysql> select * from worker where mod(worker_id,2)=1;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)



22. Write an SQL query to show only even rows from a table.
mysql> select * from worker where mod(worker_id,2)=0;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)



23. Write an SQL query to clone a new table from another table.
mysql> create table worker2 select * from worker;
Query OK, 8 rows affected (0.02 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from worker2;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)



24. Write an SQL query to fetch intersecting records of previous two tables.
mysql> select * from worker
    -> INTERSECT
    -> select * from worker2;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)



25. Write an SQL query to show records from one table that another table does not
have.
mysql> delete from worker2 where worker_id in(2,7);
Query OK, 2 rows affected (0.00 sec)

mysql> select * from worker2;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
6 rows in set (0.00 sec)

mysql> select * from worker where not exists (select * from worker2 where worker2.worker_id=worker.worker_id);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)


26. Write an SQL query to show the top n (say 10) records of a table.
mysql> select * from worker LIMIT 5;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)


27. Write an SQL query to fetch the list of employees with the same salary.
mysql> select * from worker where salary in( select salary from worker group by salary having count(salary)>1);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)


28. Write an SQL query to show the second-highest salary from a table.
mysql> select * from worker where salary=(select max(salary) from worker where salary<(select max(salary) from worker));
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)


29. Write an SQL query to fetch intersecting records of two tables.
mysql> select * from worker
    -> INTERSECT
    -> select * from worker2;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
6 rows in set (0.00 sec)


30. Write an SQL query to fetch the first 50% of records from a table.
mysql> select * from worker where worker_id<=( select count(worker_id)/2 from worker);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)


31. Write an SQL query to fetch the departments that have less than five people in
them.
mysql> select * from worker where department in (select department from worker group by department having count(*)<5);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> select * from worker where department in (select department from worker group by department having count(*)<4);
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)


32. Write an SQL query to show all departments along with the number of people in
there.
mysql> select department,count(department) as no_of_peoples from worker group by department;
+------------+---------------+
| department | no_of_peoples |
+------------+---------------+
| HR         |             2 |
| Admin      |             4 |
| Account    |             2 |
+------------+---------------+
3 rows in set (0.00 sec)

33. Write an SQL query to show the last record from a table.
mysql> select * from worker order by worker_id desc LIMIT 1;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)



34. Write an SQL query to fetch the first row of a table.
mysql> select * from worker  LIMIT 1;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)


35. Write an SQL query to fetch the last five records from a table.
mysql> (select * from worker order by worker_id desc LIMIT 5) order by worker_id;
+-----------+------------+-----------+--------+---------------------+------------+
| worker_id | first_name | last_name | salary | joining_date        | department |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)


36. Write an SQL query to print the name of employees having the highest salary in
each department.

mysql> select concat(first_name," ",last_name) as 'Name',department,salary from worker where salary in(select max(salary) from worker group by department);
+----------------+------------+--------+
| Name           | department | salary |
+----------------+------------+--------+
| Vishal Singhal | HR         | 300000 |
| Amitabh Singh  | Admin      | 500000 |
| Vivek Bhati    | Admin      | 500000 |
| Vipul Diwan    | Account    | 200000 |
+----------------+------------+--------+
4 rows in set (0.00 sec)


37. Write an SQL query to fetch three max salaries from a table.
mysql> select concat(first_name," ",last_name) as 'Name',department,salary from worker order by salary desc LIMIT 3;
+----------------+------------+--------+
| Name           | department | salary |
+----------------+------------+--------+
| Amitabh Singh  | Admin      | 500000 |
| Vivek Bhati    | Admin      | 500000 |
| Vishal Singhal | HR         | 300000 |
+----------------+------------+--------+
3 rows in set (0.00 sec)

mysql> select distinct(salary) from worker order by salary desc LIMIT 3;
+--------+
| salary |
+--------+
| 500000 |
| 300000 |
| 200000 |
+--------+
3 rows in set (0.00 sec)


38. Write an SQL query to fetch departments along with the total salaries paid for
each of them.
mysql> select department, sum(salary) as 'Total Salary' from worker group by department;
+------------+--------------+
| department | Total Salary |
+------------+--------------+
| HR         |       400000 |
| Admin      |      1170000 |
| Account    |       275000 |
+------------+--------------+
3 rows in set (0.00 sec)


39. Write an SQL query to fetch the names of workers who earn the highest salary.
mysql> select concat(first_name," ",last_name) as 'Name', salary from worker where salary=(select max(salary) from worker);
+---------------+--------+
| Name          | salary |
+---------------+--------+
| Amitabh Singh | 500000 |
| Vivek Bhati   | 500000 |
+---------------+--------+
2 rows in set (0.00 sec)